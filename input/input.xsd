<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <!--<xs:schema  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">-->
    <xs:element name="simulation">
        <xs:complexType>
            <xs:sequence>
                <!-- metadata (optional) -->
                <xs:element name="metadata" type="MetadataType"/>
                <!-- cuboids (n) -->
                <xs:element name="cuboids" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="cuboid" type="cuboidType" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <!-- spheroids (n) -->
                <xs:element name="spheroids" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="spheroid" type="spheroidType" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="thermostat" type="ThermostatType" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="MetadataType">
        <xs:sequence>
            <xs:element name="container" type="ContainerType"/>
            <xs:element name="force" type="ForceType"/>
            <xs:element name="delta_t" type="xs:decimal"/>
            <xs:element name="t_end" type="xs:double"/>
            <xs:element name="twoD" type="xs:boolean"/>
            <xs:element name="checkpoint" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="cuboidType">
        <xs:sequence>
            <xs:element name="velocity" type="Dvec3Type"/>
            <xs:element name="corner" type="Dvec3Type"/>
            <xs:element name="dimensions" type="Ivec3Type"/>
            <xs:element name="type" type="xs:int"/>
            <xs:element name="h" type="xs:decimal"/>
            <xs:element name="mass" type="xs:decimal"/>
            <xs:element name="epsilon" type="xs:decimal"/>
            <xs:element name="sigma" type="xs:decimal"/>
            <xs:element name="mv" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Spheroid Type -->
    <xs:complexType name="spheroidType">
        <xs:sequence>
            <xs:element name="velocity" type="Dvec3Type"/>
            <xs:element name="origin" type="Dvec3Type"/>
            <xs:element name="radius" type="xs:int"/>
            <xs:element name="type" type="xs:int"/>
            <xs:element name="h" type="xs:decimal"/>
            <xs:element name="mass" type="xs:decimal"/>
            <xs:element name="epsilon" type="xs:decimal"/>
            <xs:element name="sigma" type="xs:decimal"/>
            <xs:element name="mv" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>

    <!-- VectorType for dvec3-->
    <xs:complexType name="Dvec3Type">
        <xs:sequence>
            <xs:element name="x" type="xs:decimal"/>
            <xs:element name="y" type="xs:decimal"/>
            <xs:element name="z" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>
    <!-- VectorType for dimension, std::array<int,3> -->
    <xs:complexType name="Ivec3Type">
        <xs:sequence>
            <xs:element name="x" type="xs:int"/>
            <xs:element name="y" type="xs:int"/>
            <xs:element name="z" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ContainerType">
        <xs:choice>
            <xs:element name="directSum" type="DirectSumType"/>
            <xs:element name="linkedCells" type="LinkedCellsType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="LinkedCellsType">
        <xs:sequence>
            <xs:element name="domain" type="Ivec3Type"/>
            <xs:element name="r_cutoff" type="xs:decimal"/>
            <xs:element name="boundary" type="BoundaryConfigType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DirectSumType">
    </xs:complexType>

    <xs:complexType name="BoundaryType">
        <xs:choice>
            <xs:element name="Outflow"/>
            <xs:element name="Reflective"/>
            <xs:element name="Periodic"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="BoundaryConfigType">
        <xs:sequence>
            <xs:element name="x_high" type="BoundaryType"/>
            <xs:element name="x_low" type="BoundaryType"/>
            <xs:element name="y_high" type="BoundaryType"/>
            <xs:element name="y_low" type="BoundaryType"/>
            <xs:element name="z_high" type="BoundaryType"/>
            <xs:element name="z_low" type="BoundaryType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ForceType">
        <xs:sequence>
            <xs:element name="Gravity" type="GravityType" minOccurs="0"/>
            <xs:element name="LennardJones" type="LennardJonesForce" minOccurs="0"/>
            <xs:element name="SingularGravity" type="SingularGravityType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GravityType">
    </xs:complexType>

    <xs:complexType name="LennardJonesForce">
    </xs:complexType>

    <xs:complexType name="SingularGravityType">
        <xs:attribute name="g" type="xs:decimal"/>
    </xs:complexType>

    <xs:complexType name="ThermostatType">
        <xs:sequence>
            <xs:element name="T_init" type="xs:decimal"/>
            <xs:element name="n_thermostat" type="xs:int"/>
            <xs:element name="T_target" type="xs:decimal" minOccurs="0"/>
            <xs:element name="deltaT" type="xs:decimal" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>